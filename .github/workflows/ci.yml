name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-pnpm
        with:
          node-version: ${{ matrix.node-version }}

      - name: Security audit
        run: pnpm audit --audit-level=moderate
        continue-on-error: true

      - name: Type check
        run: pnpm type-check

      - name: Lint
        run: pnpm lint

      - name: Format check
        run: pnpm format:check

      - name: Run unit tests
        run: pnpm test:unit

      - name: Run integration tests
        run: pnpm test:integration

      - name: Run coverage
        run: pnpm test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-pnpm

      - name: Build
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  docker:
    name: Docker Build & Test
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: quotes-service:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create .env file for Docker test
        run: |
          cat > .env << EOF
          NODE_ENV=production
          HOST=0.0.0.0
          PORT=3000
          LOG_LEVEL=info
          QUOTES_API_URL=https://api.quotable.io/quotes
          ALLOWED_ORIGINS=*
          RATE_LIMIT_MAX=100
          RATE_LIMIT_WINDOW=60000
          EOF

      - name: Test Docker container starts successfully
        run: |
          docker run -d --name test-app \
            --env-file .env \
            -p 3000:3000 \
            quotes-service:latest

          # Wait for container to be healthy (max 30 seconds)
          timeout=30
          counter=0
          until [ $counter -ge $timeout ]; do
            if docker exec test-app wget --spider -q http://localhost:3000/health; then
              echo "Container is healthy!"
              docker logs test-app
              docker stop test-app
              exit 0
            fi
            counter=$((counter + 1))
            sleep 1
          done

          echo "Container failed to become healthy"
          docker logs test-app
          docker stop test-app
          exit 1
